
apiVersion:  apps/v1
kind: Deployment
metadata:
  name: <%=data.deploymentName%>
spec:
  replicas: 2
  selector:
    matchLabels:
      app: <%=data.applicationName%>
  template:
    metadata:
      labels:
        app: <%=data.applicationName%>
    spec:
      containers:
      - name: <%=data.applicationName%> 
        image: <%=data.imageName%>
        ports:
        - containerPort: 80
        envFrom:
            - configMapRef:
                name: common-config
        volumeMounts:
            - name: logback-config-volume
              mountPath: /etc/simple
      volumes:
        - name: logback-config-volume
          configMap:
            name: logback-config
    
     
---
apiVersion: v1
kind: Service
metadata:
  name: <%=data.serviceName%>
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: <%=data.applicationName%>
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: <%=data.certConfigName%> 
  namespace: istio-system
spec:
  dnsNames:
    - <%=data.domainName%>
  secretName: <%=data.certConfigName%> 
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: <%=data.gatewayConfigName%> 
spec:
  selector:
    istio: ingressgateway # use Istio test-test
  servers:
  - port:
      number: 443
      name: https-service
      protocol: HTTPS
    tls:
      mode: SIMPLE
      #serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      #privateKey: /etc/istio/ingressgateway-certs/tls.key
      credentialName: <%=data.certConfigName%> 
    hosts:
    - "<%=data.domainName%>"
  - port:
      number: 80
      name: http-service
      protocol: HTTP
    hosts:
    - "<%=data.domainName%>"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: <%=data.vServiceConfigName%> 
spec:
  hosts:
  - "<%=data.domainName%>"
  gateways:
  - <%=data.gatewayConfigName%> 
  http: <%data.routes.forEach(function(route){%>
  - match:
    - uri:
        prefix: <%=route.path%>
    route:
    - destination:
        host: <%=route.serviceName%>
        port:
          number: 80
    corsPolicy:
      allowOrigin:
      - "*"
      allowMethods:
      - POST
      - PUT
      - GET
      allowHeaders:
      - X-Custom-Header
      exposeHeaders:
      - X-Expose-Header
      maxAge: 24h
      allowCredentials: false <%});%>

