
apiVersion:  apps/v1
kind: Deployment
metadata:
  name: <%=data.deploymentName%>
spec:
  replicas: 2
  selector:
    matchLabels:
      app: <%=data.applicationName%>
  template:
    metadata:
      labels:
        app: <%=data.applicationName%>
    spec:
      containers:
      - name: <%=data.applicationName%>
        image: <%=data.imageName%>
        ports:
        - containerPort: 8080
        envFrom:
            - configMapRef:
                name: common-config
---
apiVersion: v1
kind: Service
metadata:
  name: <%=data.serviceName%>
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: <%=data.applicationName%>
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-ingress
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: >-
      DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: 'PUT, GET, POST, OPTIONS'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
spec:
  tls:
  - hosts:
    - www.koudaibook.com
    secretName: one-cert
  rules:
  - host: www.koudaibook.com
    http:
      paths:<%data.routes.forEach(function(route){%>
      - path: <%=route.path%>
        backend:
          serviceName: <%=route.serviceName%>
          servicePort: 80<%});%>